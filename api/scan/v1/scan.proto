syntax = "proto3";

package scan.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "backend-GuardRails/api/scan/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.scan.v1";
option java_outer_classname = "ScanProtoV1";


service Scan {
  rpc ScanRepository (ScanRepositoryRequest) returns (ScanRepositoryResponse) {
    option (google.api.http) = {
      post: "/v1/scan"
      body: "*"
      response_body: "*"
    };
  }

  rpc GetScanRepositoryResult (GetScanRepositoryResultRequest) returns (GetScanRepositoryResultResponse) {
    option (google.api.http) = {
      get: "/v1/scan/{result_id}"
    };
  }
}


message ScanRepositoryRequest {
  uint64 repository_id = 1;
}

enum ScanStatus {
  Queued = 0;
  InProgress = 1;
  Success = 2;
  Failure = 3;
}

message ScanRepositoryResponse {
  uint64 result_id = 1;
  ScanStatus scan_status = 2;
  google.protobuf.Timestamp enqueued_time = 3;
}

message GetScanRepositoryResultRequest {
  uint64 result_id = 1;
}

message GetScanRepositoryResultResponse {
  uint64 result_id = 1;
  ScanStatus scan_status = 2;
  uint64 repository_id = 3;
  repeated Finding findings = 4;
  google.protobuf.Timestamp enqueued_time = 5;
  google.protobuf.Timestamp start_time = 6;
  google.protobuf.Timestamp finish_time = 7;
}

message Finding {
  string type = 1;
  string rule_id = 2;
  Location location = 3;
  Metadata metadata = 4;
}

message Metadata {
  string description = 1;
  string severity = 2;
}

message Location {
  string path = 1;
  Positions positions = 2;

}

message Positions {
  Begin begin = 1;
}

message Begin {
  uint32 line = 1;
}