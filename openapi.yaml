# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /v1/repository:
        post:
            tags:
                - Repository
            description: Sends a greeting
            operationId: Repository_CreateRepository
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/repository.v1.CreateRepositoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/repository.v1.CreateRepositoryResponse'
    /v1/scan:
        post:
            tags:
                - Scan
            operationId: Scan_ScanRepository
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/scan.v1.ScanRepositoryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/scan.v1.ScanRepositoryResponse'
    /v1/scan/{resultId}:
        get:
            tags:
                - Scan
            operationId: Scan_GetScanRepositoryResult
            parameters:
                - name: resultId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/scan.v1.GetScanRepositoryResultResponse'
components:
    schemas:
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        repository.v1.CreateRepositoryRequest:
            type: object
            properties:
                name:
                    type: string
                link:
                    type: string
            description: The request message containing the user's name.
        repository.v1.CreateRepositoryResponse:
            type: object
            properties:
                id:
                    type: string
                message:
                    type: string
            description: The response message containing the greetings
        scan.v1.Begin:
            type: object
            properties:
                line:
                    type: integer
                    format: uint32
        scan.v1.Finding:
            type: object
            properties:
                type:
                    type: string
                ruleId:
                    type: string
                location:
                    $ref: '#/components/schemas/scan.v1.Location'
                metadata:
                    $ref: '#/components/schemas/scan.v1.Metadata'
        scan.v1.GetScanRepositoryResultResponse:
            type: object
            properties:
                resultId:
                    type: string
                scanStatus:
                    type: integer
                    format: enum
                repositoryId:
                    type: string
                findings:
                    type: array
                    items:
                        $ref: '#/components/schemas/scan.v1.Finding'
                enqueuedTime:
                    type: string
                    format: date-time
                startTime:
                    type: string
                    format: date-time
                finishTime:
                    type: string
                    format: date-time
        scan.v1.Location:
            type: object
            properties:
                path:
                    type: string
                positions:
                    $ref: '#/components/schemas/scan.v1.Positions'
        scan.v1.Metadata:
            type: object
            properties:
                description:
                    type: string
                severity:
                    type: string
        scan.v1.Positions:
            type: object
            properties:
                begin:
                    $ref: '#/components/schemas/scan.v1.Begin'
        scan.v1.ScanRepositoryRequest:
            type: object
            properties:
                repositoryId:
                    type: string
        scan.v1.ScanRepositoryResponse:
            type: object
            properties:
                resultId:
                    type: string
                scanStatus:
                    type: integer
                    format: enum
tags:
    - name: Greeter
      description: The greeting service definition.
    - name: Repository
      description: The greeting service definition.
    - name: Scan
